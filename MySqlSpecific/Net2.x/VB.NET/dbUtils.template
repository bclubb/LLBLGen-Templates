' ////////////////////////////////////////////////////////////////////////////////////////////////////////
' // This is generated code. 
' ////////////////////////////////////////////////////////////////////////////////////////////////////////
' // Code is generated using LLBLGen Pro version: <[LLBLGenVersion]>
' // 
' // 
' // Code is generated using templates: <[TemplateName]>
' // Templates vendor: Solutions Design.
' // Templates version: <[TemplateVersion]>
' ////////////////////////////////////////////////////////////////////////////////////////////////////////
Imports System
Imports System.Data
Imports System.Data.Common
Imports System.Configuration

Imports SD.LLBLGen.Pro.ORMSupportClasses

Namespace <[RootNamespace]>.HelperClasses
	''' <summary>
	''' General utility methods used for Access usage by the framework. 
	''' </summary>
	Public Class DbUtils

#Region "Public Static Members"
		Public Shared ActualConnectionString As String = String.Empty
#End Region

#Region "Constants"
		Private Const connectionKeyString As String = "<[ConnectionStringKeyName]>"
#End Region

#Region "Class Member Declarations"
		Private Shared _commandTimeOut As Integer = 30
#End Region

		''' <summary>
		''' Private CTor, no instatiation possible
		''' </summary>
		Private Sub New()
		End Sub


		''' <summary>
		''' Creates a new MySqlConnection
		''' </summary>
		''' <param name="connectionString">Connectionstring To use</param>
		''' <returns>A ready to use, closed, MySqlConnection Object</returns>
		Public Shared Function CreateConnection(connectionString As String) As IDbConnection
			Dim toReturn As DbConnection = SD.LLBLGen.Pro.DQE.MySql.DynamicQueryEngine.FactoryToUse.CreateConnection()
            toReturn.ConnectionString = connectionString
            Return toReturn
		End Function


		''' <summary>
		''' Creates a new closed MySqlConnection Object based on the connection string read from the *.config file of the appdomain.
		''' The connection string is stored in a key with the name defined in the constant connectionKeyString, mentioned above.
		''' </summary>
		''' <returns>A ready to use, closed, MySqlConnection Object</returns>
		Public Shared Function CreateConnection() As IDbConnection
			If ActualConnectionString = String.Empty Then
				ActualConnectionString = ConfigFileHelper.ReadConnectionStringFromConfig( connectionKeyString)
			End If
			Return CreateConnection(ActualConnectionString)
		End Function


		''' <summary>
		''' Determines which connection to use: the connection held by the passed in transaction (if any) or a new one (if no Transaction was passed in)
		''' </summary>
		''' <param name="containingTransaction">A transaction the caller participates in. If null, the caller is not participating in a transaction</param>
		''' <returns>A ready to use connection Object</returns>
		Public Shared Function DetermineConnectionToUse(containingTransaction As ITransaction) As IDbConnection
			If Not containingTransaction Is Nothing Then
				Return containingTransaction.ConnectionToUse
			Else
				Return CreateConnection()
			End If
		End Function


		''' <summary>
		''' Creates a new OleDbDataAdapter.
		''' </summary>
		''' <returns></returns>
		Public Shared Function CreateDataAdapter() As DbDataAdapter
			Return SD.LLBLGen.Pro.DQE.MySql.DynamicQueryEngine.FactoryToUse.CreateDataAdapter()
		End Function


		''' <summary>
		''' Creates a new Access transaction
		''' </summary>
		''' <param name="connectionToUse">the connection to use</param>
		''' <param name="isolationLevelToUse">the isolation level to use</param>
		''' <param name="name">the name for the transaction</param>
		''' <returns>new OleDbTransaction Object.</returns>
		Public Shared Function CreateTransaction(connectionToUse As IDbConnection, isolationLevelToUse As IsolationLevel, name As String) As IDbTransaction		
			Return connectionToUse.BeginTransaction(isolationLevelToUse)
		End Function


#Region "Class Property Declarations"
		''' <summary>
		''' Gets / sets the command time out (in seconds). This is a global setting, so every Command object created after you've set this
		''' property to a value will have that value as CommandTimeOut. Default is 30 seconds which is the ADO.NET default.
		''' </summary>
		Public Shared Property CommandTimeOut As Integer
			Get
				Return _commandTimeOut
			End Get
			Set
				_commandTimeOut = value
				SD.LLBLGen.Pro.DQE.MySql.DynamicQueryEngine.CommandTimeOut = _commandTimeOut
			End Set
		End Property
#End Region

#Region "Included Code"
<# Custom_DbUtilsTemplate #>
#End Region
	End Class
End Namespace
