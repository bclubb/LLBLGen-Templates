' ////////////////////////////////////////////////////////////////////////////////////////////////////////
' // This is generated code. 
' ////////////////////////////////////////////////////////////////////////////////////////////////////////
' // Code is generated using LLBLGen Pro version: <[LLBLGenVersion]>
' // Code is generated on: <[Time]>
' // Code is generated using templates: <[TemplateName]>
' // Templates vendor: Solutions Design.
' // Templates version: <[TemplateVersion]>
' ////////////////////////////////////////////////////////////////////////////////////////////////////////
Imports System
Imports System.Data
Imports Npgsql
Imports NpgsqlTypes

Imports SD.LLBLGen.Pro.ORMSupportClasses

Imports <[RootNamespace]>.HelperClasses

Namespace <[RootNamespace]>.StoredProcedureCallerClasses
	''' <summary>
	''' Class which contains the static logic to execute retrieval stored procedures in the database.
	''' </summary>
	Public Class RetrievalProcedures
		''' <summary>
		''' private CTor so no instance can be created.
		''' </summary>
		Private Sub New()
		End Sub

	<[Foreach RetrievalStoredProcedureCall CrLf]>
		''' <summary>
		''' Calls stored procedure '<[ActualStoredProcedureName]>'.<br/><br/>
		''' <[Foreach CustomProperty RetrievalStoredProcedureCall]>
		''' <[CustomPropertyName]>: <[CustomPropertyValue]><br/><[NextForeach]>
		''' </summary>
<[If HasParameter NoCursors]><[Foreach Parameter NoCursors CrLf]>		''' <param name="<[CaseCamel CurrentParameterName]>"><[CurrentParameterDirection]> parameter of stored procedure</param><[NextForeach]>
<[EndIf]>		''' <returns>Filled DataSet with resultset(s) of stored procedure</returns>
		Public Shared Function <[CurrentSPCallName]>(<[Foreach InputParameter Comma]><[CaseCamel CurrentParameterName]> As <[If IsNullable]><[If IsValueType]>Nullable(Of <[TypeOfParameter]>)<[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]><[NextForeach]><[If HasInputAndOutputParameters NoCursors]>, <[EndIf]><[Foreach OutputParameter NoCursors Comma]>ByRef <[CaseCamel CurrentParameterName]> As <[If IsNullable]><[If IsValueType]>Nullable(Of <[TypeOfParameter]>)<[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]><[NextForeach]>) As DataSet
			Dim parameters() As NpgsqlParameter = New NpgsqlParameter(<[AmountOfParameters]> - 1) {}
<[Foreach Parameter NoCursors CrLf]>			parameters(<[ParameterIndex]>) = New NpgsqlParameter("<[ActualParameterName]>", NpgsqlDbType.<[TypeOfActualParameter]>, <[ParameterSize]>, "", ParameterDirection.<[CurrentParameterDirection]>, True, <[ParameterPrecision]>, <[ParameterScale]>,  DataRowVersion.Current, <[CaseCamel CurrentParameterName]>)<[NextForeach]>
			Dim toReturn As DataSet = New DataSet("<[CurrentSPCallName]>")
			Dim hasSucceeded As Boolean = DbUtils.CallRetrievalStoredProcedure("<[SourceSchemaName]>.<[ActualStoredProcedureName]>", parameters, toReturn, Nothing)
			Return toReturn
		End Function

		''' <summary>
		''' Calls stored procedure '<[ActualStoredProcedureName]>'.<br/><br/>
		''' <[Foreach CustomProperty RetrievalStoredProcedureCall]>
		''' <[CustomPropertyName]>: <[CustomPropertyValue]><br/><[NextForeach]>
		''' </summary>
<[If HasParameter NoCursors]><[Foreach Parameter NoCursors CrLf]>		''' <param name="<[CaseCamel CurrentParameterName]>"><[CurrentParameterDirection]> parameter of stored procedure</param><[NextForeach]>
<[EndIf]>		''' <param name="transactionToUse">the transaction to use, or null if no transaction is available.</param>
		''' <returns>Filled DataSet with resultset(s) of stored procedure</returns>
		Public Shared Function <[CurrentSPCallName]>(<[Foreach InputParameter Comma]><[CaseCamel CurrentParameterName]> As <[If IsNullable]><[If IsValueType]>Nullable(Of <[TypeOfParameter]>)<[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]><[NextForeach]><[If HasInputAndOutputParameters NoCursors]>, <[EndIf]><[Foreach OutputParameter NoCursors Comma]>ByRef <[CaseCamel CurrentParameterName]> As <[If IsNullable]><[If IsValueType]>Nullable(Of <[TypeOfParameter]>)<[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]><[NextForeach]><[If HasParameter NoCursors]>, <[EndIf]>transactionToUse As ITransaction) As DataSet
			Dim parameters() As NpgsqlParameter = New NpgsqlParameter(<[AmountOfParameters]> - 1) {}
<[Foreach Parameter NoCursors CrLf]>			parameters(<[ParameterIndex]>) = New NpgsqlParameter("<[ActualParameterName]>", NpgsqlDbType.<[TypeOfActualParameter]>, <[ParameterSize]>, "", ParameterDirection.<[CurrentParameterDirection]>, True, <[ParameterPrecision]>, <[ParameterScale]>,  DataRowVersion.Current, <[CaseCamel CurrentParameterName]>)<[NextForeach]>
			Dim toReturn As DataSet = New DataSet("<[CurrentSPCallName]>")
			Dim hasSucceeded As Boolean = DbUtils.CallRetrievalStoredProcedure("<[SourceSchemaName]>.<[ActualStoredProcedureName]>", parameters, toReturn, transactionToUse)
			Return toReturn
		End Function
		
		''' <summary>Creates an IRetrievalQuery Object For a Call To the procedure '<[ActualStoredProcedureName]>'.
		''' <[Foreach CustomProperty RetrievalStoredProcedureCall]>
		''' <[CustomPropertyName]>: <[CustomPropertyValue]><br/><[NextForeach]>
		''' </summary>
<[If HasParameter InputParameter]><[Foreach InputParameter CrLf]>		''' <param name="<[CaseCamel CurrentParameterName]>"><[CurrentParameterDirection]> parameter of stored procedure</param><[NextForeach]>
<[EndIf]>		''' <returns>IRetrievalQuery Object which Is ready To use For datafetching</returns>
		Public Shared Function Get<[CurrentSPCallName]>CallAsQuery( <[Foreach InputParameter Comma]><[CaseCamel CurrentParameterName]> As <[If IsNullable]><[If IsValueType]>Nullable(Of <[TypeOfParameter]>)<[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]><[NextForeach]>) As IRetrievalQuery 
			Dim toReturn As New RetrievalQuery( New NpgsqlCommand( "<[SourceSchemaName]>.<[ActualStoredProcedureName]>" ) )
<[Foreach InputParameter CrLf]>			toReturn.Parameters.Add(New NpgsqlParameter("<[ActualParameterName]>", NpgsqlDbType.<[TypeOfActualParameter]>, <[ParameterSize]>, "", ParameterDirection.Input, True, <[ParameterPrecision]>, <[ParameterScale]>,  DataRowVersion.Current, <[CaseCamel CurrentParameterName]>))<[NextForeach]>
<[Foreach OutputParameter CrLf]>			toReturn.Parameters.Add(New NpgsqlParameter("<[ActualParameterName]>", NpgsqlDbType.<[TypeOfActualParameter]>, <[ParameterSize]>, "", ParameterDirection.Output, True, <[ParameterPrecision]>, <[ParameterScale]>,  DataRowVersion.Current, Nothing))<[NextForeach]>
			toReturn.Command.CommandType = CommandType.StoredProcedure
			Return toReturn
		End Function
	<[NextForeach]>

#Region "Included Code"
<# Custom_RetrievalProceduresTemplate #>
#End Region
	End Class
End Namespace
