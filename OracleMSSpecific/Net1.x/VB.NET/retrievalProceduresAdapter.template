' ///////////////////////////////////////////////////////////////
' // This is generated code. 
' //////////////////////////////////////////////////////////////
' // Code is generated using LLBLGen Pro version: <[LLBLGenVersion]>
' // 
' // 
' // Code is generated using templates: <[TemplateName]>
' // Templates vendor: Solutions Design.
' // Templates version: <[TemplateVersion]>
' //////////////////////////////////////////////////////////////
Imports System
Imports System.Data
Imports System.Data.OracleClient
Imports SD.LLBLGen.Pro.ORMSupportClasses

Namespace <[RootNamespace]><[DbSpecificNamespaceSuffix]>

	''' <summary>
	''' Class which contains the Shared logic to execute retrieval stored procedures in the database.
	''' </summary>
	Public Class RetrievalProcedures
		''' <summary>
		''' private CTor so no instance can be created.
		''' </summary>
		Private Sub New()
		End Sub

	<[Foreach RetrievalStoredProcedureCall CrLf]>
		''' <summary>
		''' Calls stored procedure '<[ActualStoredProcedureName]>'.<br/><br/>
		''' <[Foreach CustomProperty RetrievalStoredProcedureCall]>
		''' <[CustomPropertyName]>: <[CustomPropertyValue]><br/><[NextForeach]>
		''' </summary>
<[If HasParameter NoCursors]><[Foreach Parameter NoCursors CrLf]>		''' <param name="<[CaseCamel CurrentParameterName]>"><[CurrentParameterDirection]> parameter of stored procedure</param><[NextForeach]>
<[EndIf]>		''' <returns>Filled DataSet with resultset(s) of stored procedure</returns>
		Public Shared Function <[CurrentSPCallName]>(<[Foreach InputParameter Comma]><[CaseCamel CurrentParameterName]> As <[If IsNullable]><[If IsValueType]>Object<[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]><[NextForeach]><[If HasInputAndOutputParameters NoCursors]>, <[EndIf]><[Foreach OutputParameter NoCursors Comma]>ByRef <[CaseCamel CurrentParameterName]> As <[If IsNullable]><[If IsValueType]>Object<[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]><[NextForeach]>) As DataSet
			Dim adapter As New DataAccessAdapter()
			Try
				Return <[CurrentSPCallName]>(<[Foreach InputParameter Comma]><[CaseCamel CurrentParameterName]><[NextForeach]><[If HasInputAndOutputParameters NoCursors]>, <[EndIf]><[Foreach OutputParameter NoCursors Comma]><[CaseCamel CurrentParameterName]><[NextForeach]><[If HasParameter NoCursors]>, <[EndIf]> adapter)
			Finally
				adapter.Dispose()
			End Try
		End Function


		''' <summary>
		''' Calls stored procedure '<[ActualStoredProcedureName]>'.<br/><br/>
		''' <[Foreach CustomProperty RetrievalStoredProcedureCall]>
		''' <[CustomPropertyName]>: <[CustomPropertyValue]><br/><[NextForeach]>
		''' </summary>
<[If HasParameter NoCursors]><[Foreach Parameter NoCursors CrLf]>		''' <param name="<[CaseCamel CurrentParameterName]>"><[CurrentParameterDirection]> parameter of stored procedure</param><[NextForeach]>
<[EndIf]>		''' <param name="adapter">The DataAccessAdapter object to use for the call</param>
		''' <returns>Filled DataSet with resultset(s) of stored procedure</returns>
		Public Shared Function <[CurrentSPCallName]>(<[Foreach InputParameter Comma]><[CaseCamel CurrentParameterName]> As <[If IsNullable]><[If IsValueType]>Object<[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]><[NextForeach]><[If HasInputAndOutputParameters NoCursors]>, <[EndIf]><[Foreach OutputParameter NoCursors Comma]>ByRef <[CaseCamel CurrentParameterName]> As <[If IsNullable]><[If IsValueType]>Object<[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]><[NextForeach]><[If HasParameter NoCursors]>, <[EndIf]>adapter As DataAccessAdapter) As DataSet
<[Foreach OutputParameter CursorsOnly CrLf]>			Dim <[CaseCamel CurrentParameterName]> As Object = Nothing<[NextForeach]>
			Dim parameters() As OracleParameter = New OracleParameter(<[AmountOfParameters]> - 1) {}
<[Foreach Parameter CrLf]>			parameters(<[ParameterIndex]>) = New OracleParameter("<[ActualParameterName]>", OracleType.<[TypeOfActualParameter]>, <[ParameterSize]>, ParameterDirection.<[CurrentParameterDirection]>, True, <[ParameterPrecision]>, <[ParameterScale]>, "",  DataRowVersion.Current, ConvertNullToDBNull(<[CaseCamel CurrentParameterName]>))<[NextForeach]>
			Dim toReturn As DataSet = New DataSet("<[CurrentSPCallName]>")
			Dim hasSucceeded As Boolean = adapter.CallRetrievalStoredProcedure("<[SourceSchemaName]>.<[ActualStoredProcedureName]>", parameters, toReturn)
<[Foreach OutputParameter NoCursors CrLf]>			If Not parameters(<[ParameterIndex]>).Value Is System.DBNull.Value Then
				<[CaseCamel CurrentParameterName]> = CType(parameters(<[ParameterIndex]>).Value, <[If IsNullable]><[If IsValueType]>Object<[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]>)
			End If<[NextForeach]>
			Return toReturn
		End Function

		''' <summary>Creates an IRetrievalQuery Object For a Call To the procedure '<[ActualStoredProcedureName]>'.
		''' <[Foreach CustomProperty RetrievalStoredProcedureCall]>
		''' <[CustomPropertyName]>: <[CustomPropertyValue]><br/><[NextForeach]>
		''' </summary>
<[If HasParameter InputParameter]><[Foreach InputParameter CrLf]>		''' <param name="<[CaseCamel CurrentParameterName]>"><[CurrentParameterDirection]> parameter of stored procedure</param><[NextForeach]>
<[EndIf]>		''' <returns>IRetrievalQuery Object which Is ready To use For datafetching</returns>
		Public Shared Function Get<[CurrentSPCallName]>CallAsQuery( <[Foreach InputParameter Comma]><[CaseCamel CurrentParameterName]> As <[If IsNullable]><[If IsValueType]>Object<[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]><[NextForeach]>) As IRetrievalQuery 
			Dim toReturn As New RetrievalQuery( New OracleCommand( "<[SourceSchemaName]>.<[ActualStoredProcedureName]>" ) )
<[Foreach InputParameter CrLf]>			toReturn.Parameters.Add(New OracleParameter("<[ActualParameterName]>", OracleType.<[TypeOfActualParameter]>, <[ParameterSize]>, ParameterDirection.Input, True, <[ParameterPrecision]>, <[ParameterScale]>, "",  DataRowVersion.Current, ConvertNullToDBNull(<[CaseCamel CurrentParameterName]>)))<[NextForeach]>
<[Foreach OutputParameter CrLf]>			toReturn.Parameters.Add(New OracleParameter("<[ActualParameterName]>", OracleType.<[TypeOfActualParameter]>, <[ParameterSize]>, ParameterDirection.Output, True, <[ParameterPrecision]>, <[ParameterScale]>, "",  DataRowVersion.Current, DBNull.Value))<[NextForeach]>
			toReturn.Command.CommandType = CommandType.StoredProcedure
			Return toReturn
		End Function
	<[NextForeach]>

		''' <summary>If the passed in value is nothing, convert it to DBNull.Value</summary>
		''' <param name="value">The value to Convert</param>
		''' <returns>value, unless value is nothing, then DBNull.Value</returns>
		Private Shared Function ConvertNullToDBNull(value As Object) As Object
			If value Is Nothing Then
				Return DBNull.Value
			End If
			Return value
		End Function

#Region "Included Code"
<# Custom_RetrievalProceduresAdapterTemplate #>
#End Region
	End Class
End Namespace
