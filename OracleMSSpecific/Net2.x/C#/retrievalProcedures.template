///////////////////////////////////////////////////////////////
// This is generated code. 
//////////////////////////////////////////////////////////////
// Code is generated using LLBLGen Pro version: <[LLBLGenVersion]>
// Code is generated on: <[Time]>
// Code is generated using templates: <[TemplateName]>
// Templates vendor: Solutions Design.
// Templates version: <[TemplateVersion]>
//////////////////////////////////////////////////////////////
using System;
using System.Data;
using System.Data.OracleClient;

using <[RootNamespace]>.HelperClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace <[RootNamespace]>.StoredProcedureCallerClasses
{
	/// <summary>
	/// Class which contains the static logic to execute retrieval stored procedures in the database.
	/// </summary>
	public <[If UsePartialClasses]>partial <[EndIf]>class RetrievalProcedures
	{
		/// <summary>private CTor so no instance can be created.</summary>
		private RetrievalProcedures()
		{
		}
<[Foreach RetrievalStoredProcedureCall CrLf]>
		/// <summary>Calls stored procedure '<[ActualStoredProcedureName]>'.<br/><br/>
		/// <[Foreach CustomProperty RetrievalStoredProcedureCall]>
		/// <[CustomPropertyName]>: <[CustomPropertyValue]><br/><[NextForeach]>
		/// </summary>
<[If HasParameter NoCursors]><[Foreach Parameter NoCursors CrLf]>		/// <param name="<[CaseCamel CurrentParameterName]>"><[CurrentParameterDirection]> parameter of stored procedure</param><[NextForeach]>
<[EndIf]>		/// <returns>Filled DataSet with resultset(s) of stored procedure</returns>
		public static DataSet <[CurrentSPCallName]>(<[Foreach InputParameter Comma]><[If IsNullable]><[If IsValueType]>Nullable<<[TypeOfParameter]>><[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]> <[CaseCamel CurrentParameterName]><[NextForeach]><[If HasInputAndOutputParameters NoCursors]>, <[EndIf]><[Foreach OutputParameter NoCursors Comma]>ref <[If IsNullable]><[If IsValueType]>Nullable<<[TypeOfParameter]>><[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]> <[CaseCamel CurrentParameterName]><[NextForeach]>)
		{
<[Foreach OutputParameter CursorsOnly CrLf]>			object <[CaseCamel CurrentParameterName]> = null;<[NextForeach]>
			OracleParameter[] parameters = new OracleParameter[<[AmountOfParameters]>];
<[Foreach Parameter CrLf]>			parameters[<[ParameterIndex]>] = new OracleParameter("<[ActualParameterName]>", OracleType.<[TypeOfActualParameter]>, <[ParameterSize]>, ParameterDirection.<[CurrentParameterDirection]>, true, <[ParameterPrecision]>, <[ParameterScale]>, "",  DataRowVersion.Current, ConvertNullToDBNull(<[CaseCamel CurrentParameterName]>));<[NextForeach]>
			DataSet toReturn = new DataSet("<[CurrentSPCallName]>");
			bool hasSucceeded = DbUtils.CallRetrievalStoredProcedure("<[SourceSchemaName]>.<[ActualStoredProcedureName]>", parameters, toReturn, null);
<[Foreach OutputParameter NoCursors CrLf]>			if((ValueConverter.Convert(parameters[<[ParameterIndex]>])!=null) && (ValueConverter.Convert(parameters[<[ParameterIndex]>])!=System.DBNull.Value))
			{
				<[CaseCamel CurrentParameterName]> = (<[If IsNullable]><[If IsValueType]>Nullable<<[TypeOfParameter]>><[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]>)ValueConverter.Convert(parameters[<[ParameterIndex]>]);
			}<[NextForeach]>
			return toReturn;
		}

		/// <summary>
		/// Calls stored procedure '<[ActualStoredProcedureName]>'.<br/><br/>
		/// <[Foreach CustomProperty RetrievalStoredProcedureCall]>
		/// <[CustomPropertyName]>: <[CustomPropertyValue]><br/><[NextForeach]>
		/// </summary>
<[If HasParameter NoCursors]><[Foreach Parameter NoCursors CrLf]>		/// <param name="<[CaseCamel CurrentParameterName]>"><[CurrentParameterDirection]> parameter of stored procedure</param><[NextForeach]>
<[EndIf]>		/// <param name="transactionToUse">the transaction to use, or null if no transaction is available.</param>
		/// <returns>Filled DataSet with resultset(s) of stored procedure</returns>
		public static DataSet <[CurrentSPCallName]>(<[Foreach InputParameter Comma]><[If IsNullable]><[If IsValueType]>Nullable<<[TypeOfParameter]>><[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]> <[CaseCamel CurrentParameterName]><[NextForeach]><[If HasInputAndOutputParameters NoCursors]>, <[EndIf]><[Foreach OutputParameter NoCursors Comma]>ref <[If IsNullable]><[If IsValueType]>Nullable<<[TypeOfParameter]>><[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]> <[CaseCamel CurrentParameterName]><[NextForeach]><[If HasParameter NoCursors]>, <[EndIf]> ITransaction transactionToUse)
		{
<[Foreach OutputParameter CursorsOnly CrLf]>			object <[CaseCamel CurrentParameterName]> = null;<[NextForeach]>
			OracleParameter[] parameters = new OracleParameter[<[AmountOfParameters]>];
<[Foreach Parameter CrLf]>			parameters[<[ParameterIndex]>] = new OracleParameter("<[ActualParameterName]>", OracleType.<[TypeOfActualParameter]>, <[ParameterSize]>, ParameterDirection.<[CurrentParameterDirection]>, true, <[ParameterPrecision]>, <[ParameterScale]>, "",  DataRowVersion.Current, ConvertNullToDBNull(<[CaseCamel CurrentParameterName]>));<[NextForeach]>
			DataSet toReturn = new DataSet("<[CurrentSPCallName]>");
			bool hasSucceeded = DbUtils.CallRetrievalStoredProcedure("<[SourceSchemaName]>.<[ActualStoredProcedureName]>", parameters, toReturn, transactionToUse);
<[Foreach OutputParameter NoCursors CrLf]>			if((ValueConverter.Convert(parameters[<[ParameterIndex]>])!=null) && (ValueConverter.Convert(parameters[<[ParameterIndex]>])!=System.DBNull.Value))
			{
				<[CaseCamel CurrentParameterName]> = (<[If IsNullable]><[If IsValueType]>Nullable<<[TypeOfParameter]>><[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]>)ValueConverter.Convert(parameters[<[ParameterIndex]>]);
			}<[NextForeach]>
			return toReturn;
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure '<[ActualStoredProcedureName]>'.
		/// <[Foreach CustomProperty RetrievalStoredProcedureCall]>
		/// <[CustomPropertyName]>: <[CustomPropertyValue]><br/><[NextForeach]>
		/// </summary>
<[If HasParameter InputParameter]><[Foreach InputParameter CrLf]>		/// <param name="<[CaseCamel CurrentParameterName]>"><[CurrentParameterDirection]> parameter of stored procedure</param><[NextForeach]>
<[EndIf]>		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery Get<[CurrentSPCallName]>CallAsQuery( <[Foreach InputParameter Comma]><[If IsNullable]><[If IsValueType]>Nullable<<[TypeOfParameter]>><[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]> <[CaseCamel CurrentParameterName]><[NextForeach]>)
		{
			string procName = SD.LLBLGen.Pro.DQE.Oracle.DynamicQueryEngine.GetNewStoredProcedureName("<[SourceSchemaName]>.<[ActualStoredProcedureName]>" );
			RetrievalQuery toReturn = new RetrievalQuery( new OracleCommand(procName) );		
<[Foreach InputParameter CrLf]>			toReturn.Parameters.Add(new OracleParameter("<[ActualParameterName]>", OracleType.<[TypeOfActualParameter]>, <[ParameterSize]>, ParameterDirection.Input, true, <[ParameterPrecision]>, <[ParameterScale]>, "",  DataRowVersion.Current, ConvertNullToDBNull(<[CaseCamel CurrentParameterName]>)));<[NextForeach]>
<[Foreach OutputParameter CrLf]>			toReturn.Parameters.Add(new OracleParameter("<[ActualParameterName]>", OracleType.<[TypeOfActualParameter]>, <[ParameterSize]>, ParameterDirection.Output, true, <[ParameterPrecision]>, <[ParameterScale]>, "",  DataRowVersion.Current, DBNull.Value));<[NextForeach]>
			toReturn.Command.CommandType = CommandType.StoredProcedure;
			return toReturn;
		}
	<[NextForeach]>

		/// <summary>If the passed in value is null, convert it to DBNull.Value</summary>
		/// <param name="value">The value to Convert</param>
		/// <returns>value, unless value is null, then DBNull.Value</returns>
		private static object ConvertNullToDBNull(object value)
		{
			if(value==null)
			{
				return DBNull.Value;
			}
			return value;
		}
		#region Included Code
<# Custom_RetrievalProceduresTemplate #>
		#endregion
	}
}
