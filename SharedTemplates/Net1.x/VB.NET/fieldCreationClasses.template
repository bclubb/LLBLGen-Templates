' ///////////////////////////////////////////////////////////////
' This is generated code. If you modify this code, be aware
' of the fact that when you re-generate the code, your changes
' are lost. If you want to keep your changes, make this file read-only
' when you have finished your changes, however it is recommended that
' you inherit from this class to extend the functionality of this generated
' class or you modify / extend the templates used to generate this code.
' //////////////////////////////////////////////////////////////
' Code is generated using LLBLGen Pro version: <[LLBLGenVersion]>
' Code is generated on: <[Time]>
' Code is generated using templates: <[TemplateName]>
' Templates vendor: Solutions Design.
' Templates version: <[TemplateVersion]>
' //////////////////////////////////////////////////////////////
Imports System
Imports SD.LLBLGen.Pro.ORMSupportClasses
Imports <[RootNamespace]>.FactoryClasses
Imports <[RootNamespace]>

Namespace <[RootNamespace]>.HelperClasses
<[Foreach Entity]>
	''' <summary>Field Creation Class for entity <[CurrentEntityName]>Entity</summary>
	Public Class <[CurrentEntityName]>Fields
<[Foreach EntityField IncludeInherited]>
		''' <summary>Creates a new <[CurrentEntityName]>Entity.<[EntityFieldName]><[If EntityFieldIsOverriden]><[If Not EntityFieldContainedInCurrentEntity]>_<[EntityFieldEntityName]><[EndIf]><[EndIf]> field instance</summary>
		Public Shared ReadOnly Property [<[EntityFieldName]><[If EntityFieldIsOverriden]><[If Not EntityFieldContainedInCurrentEntity]>_<[EntityFieldEntityName]><[EndIf]><[EndIf]>] As EntityField
			Get 
				Return CType(EntityFieldFactory.Create(<[CurrentEntityName]>FieldIndex.<[EntityFieldName]><[If EntityFieldIsOverriden]><[If Not EntityFieldContainedInCurrentEntity]>_<[EntityFieldEntityName]><[EndIf]><[EndIf]>), EntityField)
			End Get
		End Property<[NextForeach]>
	End Class<[NextForeach]>
	
<[Foreach TypedView]><[If HasFields]>
	''' <summary>Field Creation Class for typedview <[CurrentTypedViewName]>TypedView</summary>
	Public Class <[CurrentTypedViewName]>Fields
	<[Foreach TypedViewField]>
		''' <summary>Creates a new <[CurrentTypedViewName]>TypedView.<[TypedViewFieldName]> field instance</summary>
		Public Shared ReadOnly Property [<[TypedViewFieldName]>] As EntityField
			Get 
				Return CType(EntityFieldFactory.Create(<[CurrentTypedViewName]>FieldIndex.<[TypedViewFieldName]>), EntityField)
			End Get
		End Property<[NextForeach]>
	End Class<[EndIf]><[NextForeach]>
End Namespace