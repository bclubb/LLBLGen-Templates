///////////////////////////////////////////////////////////////
// This is generated code. 
//////////////////////////////////////////////////////////////
// Code is generated using LLBLGen Pro version: <[LLBLGenVersion]>
// Code is generated on: <[Time]>
// Code is generated using templates: <[TemplateName]>
// Templates vendor: Solutions Design.
// Templates version: <[TemplateVersion]>
//////////////////////////////////////////////////////////////
using System;
using System.Data;

using FirebirdSql.Data.FirebirdClient;

using SD.LLBLGen.Pro.ORMSupportClasses;

using <[RootNamespace]>.HelperClasses;

namespace <[RootNamespace]>.StoredProcedureCallerClasses
{
	/// <summary>
	/// Class which contains the static logic to execute action stored procedures in the database.
	/// </summary>
	public <[If UsePartialClasses]>partial <[EndIf]>class ActionProcedures
	{
		/// <summary>
		/// private CTor so no instance can be created.
		/// </summary>
		private ActionProcedures()
		{
		}

	<[Foreach ActionStoredProcedureCall CrLf]>
		/// <summary>
		/// Delegate definition for stored procedure '<[ActualStoredProcedureName]>' to be used in combination of a UnitOfWork object.
		/// </summary>
		public delegate int <[CurrentSPCallName]>CallBack(<[Foreach InputParameter Comma]><[If IsNullable]><[If IsValueType]>Nullable<<[TypeOfParameter]>><[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]> <[CaseCamel CurrentParameterName]><[NextForeach]><[If HasInputAndOutputParameters]>, <[EndIf]><[Foreach OutputParameter Comma]>ref <[If IsNullable]><[If IsValueType]>Nullable<<[TypeOfParameter]>><[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]> <[CaseCamel CurrentParameterName]><[NextForeach]><[If HasParameter]>, <[EndIf]> ITransaction transactionToUse);

		/// <summary>
		/// Calls stored procedure '<[ActualStoredProcedureName]>'.<br/><br/>
		/// <[Foreach CustomProperty ActionStoredProcedureCall]>
		/// <[CustomPropertyName]>: <[CustomPropertyValue]><br/><[NextForeach]>
		/// </summary>
<[If HasParameter]><[Foreach Parameter CrLf]>		/// <param name="<[CaseCamel CurrentParameterName]>"><[CurrentParameterDirection]> parameter of stored procedure</param><[NextForeach]>
<[EndIf]>		/// <returns>Amount of rows affected, if the database / routine doesn't surpress rowcounting.</returns>
		public static int <[CurrentSPCallName]>(<[Foreach InputParameter Comma]><[If IsNullable]><[If IsValueType]>Nullable<<[TypeOfParameter]>><[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]> <[CaseCamel CurrentParameterName]><[NextForeach]><[If HasInputAndOutputParameters]>, <[EndIf]><[Foreach OutputParameter Comma]>ref <[If IsNullable]><[If IsValueType]>Nullable<<[TypeOfParameter]>><[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]> <[CaseCamel CurrentParameterName]><[NextForeach]>)
		{
			// create parameters
			FbParameter[] parameters = new FbParameter[<[AmountOfParameters]>];
<[Foreach InputParameter CrLf]>			parameters[<[ParameterIndex]>] = new FbParameter("@<[ActualParameterName]>", FbDbType.<[TypeOfActualParameter]>, <[ParameterSize]>, ParameterDirection.Input, true, <[ParameterPrecision]>, <[ParameterScale]>, "",  DataRowVersion.Current, <[CaseCamel CurrentParameterName]>);<[NextForeach]>
<[Foreach OutputParameter CrLf]>			parameters[<[ParameterIndex]>] = new FbParameter("@<[ActualParameterName]>", FbDbType.<[TypeOfActualParameter]>, <[ParameterSize]>, ParameterDirection.Output, true, <[ParameterPrecision]>, <[ParameterScale]>, "",  DataRowVersion.Current, <[CaseCamel CurrentParameterName]>);<[NextForeach]>
			// Call the stored proc.
			int toReturn = DbUtils.CallActionStoredProcedure("<[ActualStoredProcedureName]>", parameters, null);
<[Foreach OutputParameter CrLf]>			if(parameters[<[ParameterIndex]>].Value!=System.DBNull.Value)
			{
				<[CaseCamel CurrentParameterName]> = (<[If IsNullable]><[If IsValueType]>Nullable<<[TypeOfParameter]>><[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]>)parameters[<[ParameterIndex]>].Value;
			}<[NextForeach]>
			return toReturn;
		}


		/// <summary>
		/// Calls stored procedure '<[ActualStoredProcedureName]>'.<br/><br/>
		/// <[Foreach CustomProperty ActionStoredProcedureCall]>
		/// <[CustomPropertyName]>: <[CustomPropertyValue]><br/><[NextForeach]>
		/// </summary>
<[If HasParameter]><[Foreach Parameter CrLf]>		/// <param name="<[CaseCamel CurrentParameterName]>"><[CurrentParameterDirection]> parameter of stored procedure</param><[NextForeach]>
<[EndIf]>		/// <param name="transactionToUse">the transaction to use, or null if no transaction is available.</param>
		/// <returns>Amount of rows affected, if the database / routine doesn't surpress rowcounting.</returns>
		public static int <[CurrentSPCallName]>(<[Foreach InputParameter Comma]><[If IsNullable]><[If IsValueType]>Nullable<<[TypeOfParameter]>><[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]> <[CaseCamel CurrentParameterName]><[NextForeach]><[If HasInputAndOutputParameters]>, <[EndIf]><[Foreach OutputParameter Comma]>ref <[If IsNullable]><[If IsValueType]>Nullable<<[TypeOfParameter]>><[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]> <[CaseCamel CurrentParameterName]><[NextForeach]><[If HasParameter]>, <[EndIf]> ITransaction transactionToUse)
		{
			// create parameters
			FbParameter[] parameters = new FbParameter[<[AmountOfParameters]>];
<[Foreach InputParameter CrLf]>			parameters[<[ParameterIndex]>] = new FbParameter("@<[ActualParameterName]>", FbDbType.<[TypeOfActualParameter]>, <[ParameterSize]>, ParameterDirection.Input, true, <[ParameterPrecision]>, <[ParameterScale]>, "",  DataRowVersion.Current, <[CaseCamel CurrentParameterName]>);<[NextForeach]>
<[Foreach OutputParameter CrLf]>			parameters[<[ParameterIndex]>] = new FbParameter("@<[ActualParameterName]>", FbDbType.<[TypeOfActualParameter]>, <[ParameterSize]>, ParameterDirection.Output, true, <[ParameterPrecision]>, <[ParameterScale]>, "",  DataRowVersion.Current, <[CaseCamel CurrentParameterName]>);<[NextForeach]>
			// Call the stored proc.
			int toReturn = DbUtils.CallActionStoredProcedure("<[ActualStoredProcedureName]>", parameters, transactionToUse);
<[Foreach OutputParameter CrLf]>			if(parameters[<[ParameterIndex]>].Value!=System.DBNull.Value)
			{
				<[CaseCamel CurrentParameterName]> = (<[If IsNullable]><[If IsValueType]>Nullable<<[TypeOfParameter]>><[Else]><[TypeOfParameter]><[EndIf]><[Else]><[TypeOfParameter]><[EndIf]>)parameters[<[ParameterIndex]>].Value;
			}<[NextForeach]>
			return toReturn;
		}
	<[NextForeach]>

		#region Included Code
<# Custom_ActionProceduresTemplate #>
		#endregion
	}
}
